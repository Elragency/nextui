---
// Import the necessary dependencies
import { Image } from "astro:assets";
import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro";
import SecondaryCTA from "@components/ui/buttons/SecondaryCTA.astro";
import ReviewComponent from "@components/ui/blocks/ReviewComponent.astro";

// Define props from Astro
const {
  title,
  subTitle,
  primaryBtn,
  primaryBtnURL,
  secondaryBtn,
  secondaryBtnURL,
  withReview,
  avatars,
  starCount,
  rating,
  reviews,
  src,
  alt
} = Astro.props;

// Define TypeScript interface for props
interface Props {
  title: string;
  subTitle?: string;
  primaryBtn?: string;
  primaryBtnURL?: string;
  secondaryBtn?: string;
  secondaryBtnURL?: string;
  withReview?: boolean;
  avatars?: Array<string>;
  starCount?: number;
  rating?: string;
  reviews?: string;
  src?: any;
  alt?: string;
}
---

<!-- Defining a grid container that holds all the content -->
<section class="relative grid max-w-[85rem] gap-4 px-4 sm:px-6 lg:px-8 py-14 md:grid-cols-2 md:items-center md:gap-8 2xl:max-w-full h-screen">
  <!-- Hero Image Section -->
  <div class="absolute inset-0 -mx-4 sm:-mx-6 lg:-mx-8 z-0 overflow-hidden">
    {src && alt &&
      <Image
        src={src}
        alt={alt}
        class="h-full w-full object-cover object-center"
        draggable={"false"}
        loading={"eager"}
        format={"avif"}
      />
    }
  </div>

  <!-- Title and description -->
  <div class="relative z-10">
    <h1 class="font-montserrat font-black text-balance text-3xl tracking-tight text-neutral-800 dark:text-neutral-200 sm:text-4xl lg:text-6xl lg:leading-tight">
      <Fragment set:html={title} />
    </h1>    
    {subTitle &&
      <p class="mt-3 text-pretty text-lg leading-relaxed text-neutral-700 dark:text-neutral-400 lg:w-4/5">
        {subTitle}
      </p>
    }
    
    <!-- Action Button Section -->
    <div class="mt-7 grid w-full gap-3 sm:inline-flex">
      {primaryBtn && <PrimaryCTA title={primaryBtn} url={primaryBtnURL} />}
      {secondaryBtn && <SecondaryCTA title={secondaryBtn} url={secondaryBtnURL} />}
    </div>

    <!-- Review Section -->
    {withReview ? (
      <ReviewComponent avatars={avatars} starCount={starCount} rating={rating} reviews={reviews} />
    ) : ""}
  </div>
</section>


